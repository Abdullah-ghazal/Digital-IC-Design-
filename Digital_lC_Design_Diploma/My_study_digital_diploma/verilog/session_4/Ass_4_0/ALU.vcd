$date
	Sat Mar 16 23:57:55 2024
$end
$version
	ModelSim Version 10.1d
$end
$timescale
	1us
$end
$scope module ALU_TOP_tb $end
$var parameter 32 ! WIDTH_tb $end
$var parameter 32 " T $end
$var reg 16 # A_tb [15:0] $end
$var reg 16 $ B_tb [15:0] $end
$var reg 4 % ALU_FUN_tb [3:0] $end
$var reg 1 & CLK_tb $end
$var reg 1 ' RST_tb $end
$var wire 1 ( Arith_OUT_tb [31] $end
$var wire 1 ) Arith_OUT_tb [30] $end
$var wire 1 * Arith_OUT_tb [29] $end
$var wire 1 + Arith_OUT_tb [28] $end
$var wire 1 , Arith_OUT_tb [27] $end
$var wire 1 - Arith_OUT_tb [26] $end
$var wire 1 . Arith_OUT_tb [25] $end
$var wire 1 / Arith_OUT_tb [24] $end
$var wire 1 0 Arith_OUT_tb [23] $end
$var wire 1 1 Arith_OUT_tb [22] $end
$var wire 1 2 Arith_OUT_tb [21] $end
$var wire 1 3 Arith_OUT_tb [20] $end
$var wire 1 4 Arith_OUT_tb [19] $end
$var wire 1 5 Arith_OUT_tb [18] $end
$var wire 1 6 Arith_OUT_tb [17] $end
$var wire 1 7 Arith_OUT_tb [16] $end
$var wire 1 8 Arith_OUT_tb [15] $end
$var wire 1 9 Arith_OUT_tb [14] $end
$var wire 1 : Arith_OUT_tb [13] $end
$var wire 1 ; Arith_OUT_tb [12] $end
$var wire 1 < Arith_OUT_tb [11] $end
$var wire 1 = Arith_OUT_tb [10] $end
$var wire 1 > Arith_OUT_tb [9] $end
$var wire 1 ? Arith_OUT_tb [8] $end
$var wire 1 @ Arith_OUT_tb [7] $end
$var wire 1 A Arith_OUT_tb [6] $end
$var wire 1 B Arith_OUT_tb [5] $end
$var wire 1 C Arith_OUT_tb [4] $end
$var wire 1 D Arith_OUT_tb [3] $end
$var wire 1 E Arith_OUT_tb [2] $end
$var wire 1 F Arith_OUT_tb [1] $end
$var wire 1 G Arith_OUT_tb [0] $end
$var wire 1 H Carry_OUT_tb $end
$var wire 1 I Arith_Flag_tb $end
$var wire 1 J Logic_OUT_tb [15] $end
$var wire 1 K Logic_OUT_tb [14] $end
$var wire 1 L Logic_OUT_tb [13] $end
$var wire 1 M Logic_OUT_tb [12] $end
$var wire 1 N Logic_OUT_tb [11] $end
$var wire 1 O Logic_OUT_tb [10] $end
$var wire 1 P Logic_OUT_tb [9] $end
$var wire 1 Q Logic_OUT_tb [8] $end
$var wire 1 R Logic_OUT_tb [7] $end
$var wire 1 S Logic_OUT_tb [6] $end
$var wire 1 T Logic_OUT_tb [5] $end
$var wire 1 U Logic_OUT_tb [4] $end
$var wire 1 V Logic_OUT_tb [3] $end
$var wire 1 W Logic_OUT_tb [2] $end
$var wire 1 X Logic_OUT_tb [1] $end
$var wire 1 Y Logic_OUT_tb [0] $end
$var wire 1 Z Logic_Flag_tb $end
$var wire 1 [ CMP_OUT_tb [1] $end
$var wire 1 \ CMP_OUT_tb [0] $end
$var wire 1 ] CMP_Flag_tb $end
$var wire 1 ^ SHIFT_OUT_tb [15] $end
$var wire 1 _ SHIFT_OUT_tb [14] $end
$var wire 1 ` SHIFT_OUT_tb [13] $end
$var wire 1 a SHIFT_OUT_tb [12] $end
$var wire 1 b SHIFT_OUT_tb [11] $end
$var wire 1 c SHIFT_OUT_tb [10] $end
$var wire 1 d SHIFT_OUT_tb [9] $end
$var wire 1 e SHIFT_OUT_tb [8] $end
$var wire 1 f SHIFT_OUT_tb [7] $end
$var wire 1 g SHIFT_OUT_tb [6] $end
$var wire 1 h SHIFT_OUT_tb [5] $end
$var wire 1 i SHIFT_OUT_tb [4] $end
$var wire 1 j SHIFT_OUT_tb [3] $end
$var wire 1 k SHIFT_OUT_tb [2] $end
$var wire 1 l SHIFT_OUT_tb [1] $end
$var wire 1 m SHIFT_OUT_tb [0] $end
$var wire 1 n SHIFT_Flag_tb $end
$var wire 1 o flags [3] $end
$var wire 1 p flags [2] $end
$var wire 1 q flags [1] $end
$var wire 1 r flags [0] $end
$scope module uut $end
$var parameter 32 s WIDTH $end
$var wire 1 t A [15] $end
$var wire 1 u A [14] $end
$var wire 1 v A [13] $end
$var wire 1 w A [12] $end
$var wire 1 x A [11] $end
$var wire 1 y A [10] $end
$var wire 1 z A [9] $end
$var wire 1 { A [8] $end
$var wire 1 | A [7] $end
$var wire 1 } A [6] $end
$var wire 1 ~ A [5] $end
$var wire 1 !! A [4] $end
$var wire 1 "! A [3] $end
$var wire 1 #! A [2] $end
$var wire 1 $! A [1] $end
$var wire 1 %! A [0] $end
$var wire 1 &! B [15] $end
$var wire 1 '! B [14] $end
$var wire 1 (! B [13] $end
$var wire 1 )! B [12] $end
$var wire 1 *! B [11] $end
$var wire 1 +! B [10] $end
$var wire 1 ,! B [9] $end
$var wire 1 -! B [8] $end
$var wire 1 .! B [7] $end
$var wire 1 /! B [6] $end
$var wire 1 0! B [5] $end
$var wire 1 1! B [4] $end
$var wire 1 2! B [3] $end
$var wire 1 3! B [2] $end
$var wire 1 4! B [1] $end
$var wire 1 5! B [0] $end
$var wire 1 6! ALU_FUN [3] $end
$var wire 1 7! ALU_FUN [2] $end
$var wire 1 8! ALU_FUN [1] $end
$var wire 1 9! ALU_FUN [0] $end
$var wire 1 :! CLK $end
$var wire 1 ;! RST $end
$var wire 1 ( Arith_OUT [31] $end
$var wire 1 ) Arith_OUT [30] $end
$var wire 1 * Arith_OUT [29] $end
$var wire 1 + Arith_OUT [28] $end
$var wire 1 , Arith_OUT [27] $end
$var wire 1 - Arith_OUT [26] $end
$var wire 1 . Arith_OUT [25] $end
$var wire 1 / Arith_OUT [24] $end
$var wire 1 0 Arith_OUT [23] $end
$var wire 1 1 Arith_OUT [22] $end
$var wire 1 2 Arith_OUT [21] $end
$var wire 1 3 Arith_OUT [20] $end
$var wire 1 4 Arith_OUT [19] $end
$var wire 1 5 Arith_OUT [18] $end
$var wire 1 6 Arith_OUT [17] $end
$var wire 1 7 Arith_OUT [16] $end
$var wire 1 8 Arith_OUT [15] $end
$var wire 1 9 Arith_OUT [14] $end
$var wire 1 : Arith_OUT [13] $end
$var wire 1 ; Arith_OUT [12] $end
$var wire 1 < Arith_OUT [11] $end
$var wire 1 = Arith_OUT [10] $end
$var wire 1 > Arith_OUT [9] $end
$var wire 1 ? Arith_OUT [8] $end
$var wire 1 @ Arith_OUT [7] $end
$var wire 1 A Arith_OUT [6] $end
$var wire 1 B Arith_OUT [5] $end
$var wire 1 C Arith_OUT [4] $end
$var wire 1 D Arith_OUT [3] $end
$var wire 1 E Arith_OUT [2] $end
$var wire 1 F Arith_OUT [1] $end
$var wire 1 G Arith_OUT [0] $end
$var wire 1 H Carry_OUT $end
$var wire 1 I Arith_Flag $end
$var wire 1 J Logic_OUT [15] $end
$var wire 1 K Logic_OUT [14] $end
$var wire 1 L Logic_OUT [13] $end
$var wire 1 M Logic_OUT [12] $end
$var wire 1 N Logic_OUT [11] $end
$var wire 1 O Logic_OUT [10] $end
$var wire 1 P Logic_OUT [9] $end
$var wire 1 Q Logic_OUT [8] $end
$var wire 1 R Logic_OUT [7] $end
$var wire 1 S Logic_OUT [6] $end
$var wire 1 T Logic_OUT [5] $end
$var wire 1 U Logic_OUT [4] $end
$var wire 1 V Logic_OUT [3] $end
$var wire 1 W Logic_OUT [2] $end
$var wire 1 X Logic_OUT [1] $end
$var wire 1 Y Logic_OUT [0] $end
$var wire 1 Z Logic_Flag $end
$var wire 1 [ CMP_OUT [1] $end
$var wire 1 \ CMP_OUT [0] $end
$var wire 1 ] CMP_Flag $end
$var wire 1 ^ SHIFT_OUT [15] $end
$var wire 1 _ SHIFT_OUT [14] $end
$var wire 1 ` SHIFT_OUT [13] $end
$var wire 1 a SHIFT_OUT [12] $end
$var wire 1 b SHIFT_OUT [11] $end
$var wire 1 c SHIFT_OUT [10] $end
$var wire 1 d SHIFT_OUT [9] $end
$var wire 1 e SHIFT_OUT [8] $end
$var wire 1 f SHIFT_OUT [7] $end
$var wire 1 g SHIFT_OUT [6] $end
$var wire 1 h SHIFT_OUT [5] $end
$var wire 1 i SHIFT_OUT [4] $end
$var wire 1 j SHIFT_OUT [3] $end
$var wire 1 k SHIFT_OUT [2] $end
$var wire 1 l SHIFT_OUT [1] $end
$var wire 1 m SHIFT_OUT [0] $end
$var wire 1 n SHIFT_Flag $end
$var wire 1 <! Arth_enable $end
$var wire 1 =! Logic_enable $end
$var wire 1 >! CMP_enable $end
$var wire 1 ?! shft_enable $end
$scope module decoder $end
$var wire 1 6! ALU_FUN [1] $end
$var wire 1 7! ALU_FUN [0] $end
$var reg 1 @! Arith_Enable $end
$var reg 1 A! Logic_Enable $end
$var reg 1 B! CMP_Enable $end
$var reg 1 C! Shift_Enable $end
$upscope $end
$scope module arth_unit $end
$var parameter 32 D! WIDTH $end
$var wire 1 t A [15] $end
$var wire 1 u A [14] $end
$var wire 1 v A [13] $end
$var wire 1 w A [12] $end
$var wire 1 x A [11] $end
$var wire 1 y A [10] $end
$var wire 1 z A [9] $end
$var wire 1 { A [8] $end
$var wire 1 | A [7] $end
$var wire 1 } A [6] $end
$var wire 1 ~ A [5] $end
$var wire 1 !! A [4] $end
$var wire 1 "! A [3] $end
$var wire 1 #! A [2] $end
$var wire 1 $! A [1] $end
$var wire 1 %! A [0] $end
$var wire 1 &! B [15] $end
$var wire 1 '! B [14] $end
$var wire 1 (! B [13] $end
$var wire 1 )! B [12] $end
$var wire 1 *! B [11] $end
$var wire 1 +! B [10] $end
$var wire 1 ,! B [9] $end
$var wire 1 -! B [8] $end
$var wire 1 .! B [7] $end
$var wire 1 /! B [6] $end
$var wire 1 0! B [5] $end
$var wire 1 1! B [4] $end
$var wire 1 2! B [3] $end
$var wire 1 3! B [2] $end
$var wire 1 4! B [1] $end
$var wire 1 5! B [0] $end
$var wire 1 8! ALU_FUN [1] $end
$var wire 1 9! ALU_FUN [0] $end
$var wire 1 :! CLK $end
$var wire 1 ;! RST $end
$var wire 1 <! Arith_Enable $end
$var reg 32 E! Arith_OUT [31:0] $end
$var reg 1 F! Carry_OUT $end
$var reg 1 G! Arith_flag $end
$var reg 32 H! Arith_OUT_comb [31:0] $end
$var reg 1 I! Arith_flag_comb $end
$var reg 1 J! Carry_OUT_comb $end
$upscope $end
$scope module logic_unit $end
$var parameter 32 K! WIDTH $end
$var wire 1 t A [15] $end
$var wire 1 u A [14] $end
$var wire 1 v A [13] $end
$var wire 1 w A [12] $end
$var wire 1 x A [11] $end
$var wire 1 y A [10] $end
$var wire 1 z A [9] $end
$var wire 1 { A [8] $end
$var wire 1 | A [7] $end
$var wire 1 } A [6] $end
$var wire 1 ~ A [5] $end
$var wire 1 !! A [4] $end
$var wire 1 "! A [3] $end
$var wire 1 #! A [2] $end
$var wire 1 $! A [1] $end
$var wire 1 %! A [0] $end
$var wire 1 &! B [15] $end
$var wire 1 '! B [14] $end
$var wire 1 (! B [13] $end
$var wire 1 )! B [12] $end
$var wire 1 *! B [11] $end
$var wire 1 +! B [10] $end
$var wire 1 ,! B [9] $end
$var wire 1 -! B [8] $end
$var wire 1 .! B [7] $end
$var wire 1 /! B [6] $end
$var wire 1 0! B [5] $end
$var wire 1 1! B [4] $end
$var wire 1 2! B [3] $end
$var wire 1 3! B [2] $end
$var wire 1 4! B [1] $end
$var wire 1 5! B [0] $end
$var wire 1 8! ALU_FUN [1] $end
$var wire 1 9! ALU_FUN [0] $end
$var wire 1 :! CLK $end
$var wire 1 ;! RST $end
$var wire 1 =! Logic_Enable $end
$var reg 16 L! Logic_OUT [15:0] $end
$var reg 1 M! Logic_Flag $end
$var reg 16 N! Logic_OUT_comb [15:0] $end
$var reg 1 O! Logic_Flag_comb $end
$upscope $end
$scope module cmp_unit $end
$var parameter 32 P! WIDTH $end
$var wire 1 t A [15] $end
$var wire 1 u A [14] $end
$var wire 1 v A [13] $end
$var wire 1 w A [12] $end
$var wire 1 x A [11] $end
$var wire 1 y A [10] $end
$var wire 1 z A [9] $end
$var wire 1 { A [8] $end
$var wire 1 | A [7] $end
$var wire 1 } A [6] $end
$var wire 1 ~ A [5] $end
$var wire 1 !! A [4] $end
$var wire 1 "! A [3] $end
$var wire 1 #! A [2] $end
$var wire 1 $! A [1] $end
$var wire 1 %! A [0] $end
$var wire 1 &! B [15] $end
$var wire 1 '! B [14] $end
$var wire 1 (! B [13] $end
$var wire 1 )! B [12] $end
$var wire 1 *! B [11] $end
$var wire 1 +! B [10] $end
$var wire 1 ,! B [9] $end
$var wire 1 -! B [8] $end
$var wire 1 .! B [7] $end
$var wire 1 /! B [6] $end
$var wire 1 0! B [5] $end
$var wire 1 1! B [4] $end
$var wire 1 2! B [3] $end
$var wire 1 3! B [2] $end
$var wire 1 4! B [1] $end
$var wire 1 5! B [0] $end
$var wire 1 8! ALU_FUN [1] $end
$var wire 1 9! ALU_FUN [0] $end
$var wire 1 :! CLK $end
$var wire 1 ;! RST $end
$var wire 1 >! CMP_Enable $end
$var reg 2 Q! CMP_OUT [1:0] $end
$var reg 1 R! CMP_Flag $end
$var reg 2 S! CMP_OUT_comb [1:0] $end
$var reg 1 T! CMP_Flag_comb $end
$upscope $end
$scope module shft_unit $end
$var parameter 32 U! WIDTH $end
$var wire 1 t A [15] $end
$var wire 1 u A [14] $end
$var wire 1 v A [13] $end
$var wire 1 w A [12] $end
$var wire 1 x A [11] $end
$var wire 1 y A [10] $end
$var wire 1 z A [9] $end
$var wire 1 { A [8] $end
$var wire 1 | A [7] $end
$var wire 1 } A [6] $end
$var wire 1 ~ A [5] $end
$var wire 1 !! A [4] $end
$var wire 1 "! A [3] $end
$var wire 1 #! A [2] $end
$var wire 1 $! A [1] $end
$var wire 1 %! A [0] $end
$var wire 1 &! B [15] $end
$var wire 1 '! B [14] $end
$var wire 1 (! B [13] $end
$var wire 1 )! B [12] $end
$var wire 1 *! B [11] $end
$var wire 1 +! B [10] $end
$var wire 1 ,! B [9] $end
$var wire 1 -! B [8] $end
$var wire 1 .! B [7] $end
$var wire 1 /! B [6] $end
$var wire 1 0! B [5] $end
$var wire 1 1! B [4] $end
$var wire 1 2! B [3] $end
$var wire 1 3! B [2] $end
$var wire 1 4! B [1] $end
$var wire 1 5! B [0] $end
$var wire 1 8! ALU_FUN [1] $end
$var wire 1 9! ALU_FUN [0] $end
$var wire 1 :! CLK $end
$var wire 1 ;! RST $end
$var wire 1 ?! Shift_Enable $end
$var reg 16 V! SHIFT_OUT [15:0] $end
$var reg 1 W! SHIFT_Flag $end
$var reg 16 X! SHIFT_OUT_comb [15:0] $end
$var reg 1 Y! SHIFT_Flag_comb $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx #
bx $
bx %
0&
1'
x@!
xA!
xB!
xC!
bx E!
xF!
xG!
bx H!
xI!
xJ!
bx L!
xM!
bx N!
xO!
bx Q!
xR!
bx S!
xT!
bx V!
xW!
bx X!
xY!
b10000 !
b1010 "
b10000 s
b10000 D!
b10000 K!
b10000 P!
b10000 U!
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
xH
xI
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xZ
x\
x[
x]
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
xn
xr
xq
xp
xo
x<!
x=!
x>!
x?!
1;!
0:!
x9!
x8!
x7!
x6!
x5!
x4!
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
x)!
x(!
x'!
x&!
x%!
x$!
x#!
x"!
x!!
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
$end
#4
1&
1:!
#10
0'
0&
0;!
0:!
b0 E!
0G!
0F!
b0 L!
0M!
b0 Q!
0R!
b0 V!
0W!
0I
0H
0Z
0]
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0\
0[
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0n
0r
0q
0p
0o
#14
1&
1:!
#20
1'
b1010 #
b1111 $
b0 %
0&
1;!
09!
08!
07!
06!
15!
14!
13!
12!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
1$!
0#!
1"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0:!
0C!
0B!
0A!
1@!
0I!
b0 H!
0J!
0O!
b0 N!
b0 S!
0T!
b0 X!
0Y!
0?!
0>!
0=!
1<!
b11001 H!
1I!
#24
1&
1:!
b11001 E!
1G!
1G
1D
1C
1I
1o
#30
b1111111111110001 $
0&
04!
03!
02!
11!
10!
1/!
1.!
1-!
1,!
1+!
1*!
1)!
1(!
1'!
1&!
0:!
0I!
b0 H!
b11111111111111111111111111111011 H!
1J!
1I!
#34
1&
1:!
b11111111111111111111111111111011 E!
1F!
1F
1B
1A
1@
1?
1>
1=
1<
1;
1:
19
18
17
16
15
14
13
12
11
10
1/
1.
1-
1,
1+
1*
1)
1(
1H
#40
b1111111111110110 #
b1111 $
0&
14!
13!
12!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
1#!
0"!
1!!
1~
1}
1|
1{
1z
1y
1x
1w
1v
1u
1t
0:!
0I!
b0 H!
0J!
b101 H!
1I!
#44
1&
1:!
b101 E!
0F!
0F
1E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0H
#50
b1111111111110001 $
0&
04!
03!
02!
11!
10!
1/!
1.!
1-!
1,!
1+!
1*!
1)!
1(!
1'!
1&!
0:!
0I!
b0 H!
b11111111111111111111111111100111 H!
1J!
1I!
#54
1&
1:!
b11111111111111111111111111100111 E!
1F!
1F
1B
1A
1@
1?
1>
1=
1<
1;
1:
19
18
17
16
15
14
13
12
11
10
1/
1.
1-
1,
1+
1*
1)
1(
1H
#60
b1010 #
b101 $
b1 %
0&
19!
13!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0#!
1"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0:!
0I!
b0 H!
0J!
b101 H!
1I!
#64
1&
1:!
b101 E!
0F!
0F
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0H
#70
b1111 #
b1111111111110110 $
0&
05!
14!
11!
10!
1/!
1.!
1-!
1,!
1+!
1*!
1)!
1(!
1'!
1&!
1%!
1#!
0:!
0I!
b0 H!
b11001 H!
1I!
#74
1&
1:!
b11001 E!
0E
1D
1C
#80
b1111111111110001 #
b1010 $
0&
03!
12!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0$!
0#!
0"!
1!!
1~
1}
1|
1{
1z
1y
1x
1w
1v
1u
1t
0:!
0I!
b0 H!
b11111111111111111111111111100111 H!
1J!
1I!
#84
1&
1:!
b11111111111111111111111111100111 E!
1F!
1F
1E
0D
0C
1B
1A
1@
1?
1>
1=
1<
1;
1:
19
18
17
16
15
14
13
12
11
10
1/
1.
1-
1,
1+
1*
1)
1(
1H
#90
b1111111111110110 #
b1111111111100010 $
0&
02!
10!
1/!
1.!
1-!
1,!
1+!
1*!
1)!
1(!
1'!
1&!
0%!
1$!
1#!
0:!
0I!
b0 H!
0J!
b10100 H!
1I!
#94
1&
1:!
b10100 E!
0F!
0G
0F
1C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0H
#100
b1010 #
b10100 $
b10 %
0&
09!
18!
04!
13!
11!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0#!
1"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0:!
0I!
b0 H!
b11001000 H!
1I!
#104
1&
1:!
b11001000 E!
0E
1D
0C
1A
1@
#110
b1111111111110001 $
0&
15!
03!
10!
1/!
1.!
1-!
1,!
1+!
1*!
1)!
1(!
1'!
1&!
0:!
0I!
b0 H!
b11111111111111111111111101101010 H!
1J!
1I!
#114
1&
1:!
b11111111111111111111111101101010 E!
1F!
1F
1B
0@
1?
1>
1=
1<
1;
1:
19
18
17
16
15
14
13
12
11
10
1/
1.
1-
1,
1+
1*
1)
1(
1H
#120
b1111111111110110 #
b10100 $
0&
05!
13!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
1#!
0"!
1!!
1~
1}
1|
1{
1z
1y
1x
1w
1v
1u
1t
0:!
0I!
b0 H!
0J!
b11111111111111111111111100111000 H!
1J!
1I!
#124
1&
1:!
b11111111111111111111111100111000 E!
0F
1C
0A
#130
b1111111111110110 $
0&
14!
10!
1/!
1.!
1-!
1,!
1+!
1*!
1)!
1(!
1'!
1&!
0:!
0I!
b0 H!
0J!
b1100100 H!
1I!
#134
1&
1:!
b1100100 E!
0F!
1E
0D
0C
1A
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0H
#140
b1100100 #
b1010 $
b11 %
0&
19!
03!
12!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0$!
0!!
0|
0{
0z
0y
0x
0w
0v
0u
0t
0:!
0I!
b0 H!
b1010 H!
1I!
#144
1&
1:!
b1010 E!
1F
0E
1D
0B
0A
#150
b1111111111110110 $
0&
13!
02!
11!
10!
1/!
1.!
1-!
1,!
1+!
1*!
1)!
1(!
1'!
1&!
0:!
0I!
b0 H!
b11111111111111111111111111110110 H!
1J!
1I!
#154
1&
1:!
b11111111111111111111111111110110 E!
1F!
1E
0D
1C
1B
1A
1@
1?
1>
1=
1<
1;
1:
19
18
17
16
15
14
13
12
11
10
1/
1.
1-
1,
1+
1*
1)
1(
1H
#160
b1111111110011100 #
b1010 $
0&
03!
12!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
1"!
1!!
0~
0}
1|
1{
1z
1y
1x
1w
1v
1u
1t
0:!
0I!
b0 H!
0J!
b11111111111111111111111111110110 H!
1J!
1I!
#164
1&
1:!
#170
b1111111111110110 $
0&
13!
02!
11!
10!
1/!
1.!
1-!
1,!
1+!
1*!
1)!
1(!
1'!
1&!
0:!
0I!
b0 H!
0J!
b1010 H!
1I!
#174
1&
1:!
b1010 E!
0F!
0E
1D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0H
#180
b1010 #
b10100 $
b100 %
0&
09!
08!
17!
04!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
1$!
0#!
0!!
0|
0{
0z
0y
0x
0w
0v
0u
0t
0:!
1A!
0@!
0I!
b0 H!
b11110 H!
1I!
1=!
0<!
0I!
b0 H!
1O!
#184
1&
1:!
b0 E!
0G!
1M!
0F
0D
0I
1Z
1p
0o
#190
b101 %
0&
19!
0:!
0O!
b11110 N!
1O!
#194
1&
1:!
b11110 L!
1X
1W
1V
1U
#200
b110 %
0&
09!
18!
0:!
0O!
b0 N!
b1111111111111111 N!
1O!
#204
1&
1:!
b1111111111111111 L!
1Y
1T
1S
1R
1Q
1P
1O
1N
1M
1L
1K
1J
#210
b111 %
0&
19!
0:!
0O!
b0 N!
b1111111111100001 N!
1O!
#214
1&
1:!
b1111111111100001 L!
0X
0W
0V
0U
#220
b1000 %
0&
09!
08!
07!
16!
0:!
1B!
0A!
0O!
b0 N!
1O!
1>!
0=!
0O!
1T!
#224
1&
1:!
b0 L!
0M!
1R!
0Y
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0Z
1]
1q
0p
#230
b1010 $
b1001 %
0&
19!
14!
03!
12!
01!
0:!
0T!
b1 S!
1T!
#234
1&
1:!
b1 Q!
1\
#240
b1111 $
0&
15!
13!
0:!
b0 S!
0T!
1T!
#244
1&
1:!
b0 Q!
0\
#250
b101 $
b1010 %
0&
09!
18!
04!
02!
0:!
0T!
b10 S!
1T!
#254
1&
1:!
b10 Q!
1[
#260
b101 #
b1111 $
0&
14!
12!
1%!
0$!
1#!
0"!
0:!
b0 S!
0T!
1T!
#264
1&
1:!
b0 Q!
0[
#270
b1010 #
b10100 $
b1011 %
0&
19!
05!
04!
02!
11!
0%!
1$!
0#!
1"!
0:!
0T!
b11 S!
1T!
#274
1&
1:!
b11 Q!
1\
1[
#280
b10100 #
b1010 $
0&
14!
03!
12!
01!
0$!
1#!
0"!
1!!
0:!
b0 S!
0T!
1T!
#284
1&
1:!
b0 Q!
0\
0[
#290
b10 #
b1001 $
b1100 %
0&
09!
08!
17!
15!
04!
1$!
0#!
0!!
0:!
1C!
0B!
0T!
1T!
1?!
0>!
0T!
b1 X!
1Y!
#294
1&
1:!
0R!
b1 V!
1W!
0]
1m
1n
1r
0q
#300
b1101 %
0&
19!
0:!
b0 X!
0Y!
b100 X!
1Y!
#304
1&
1:!
b100 V!
0m
1k
#310
b1110 %
0&
09!
18!
0:!
b0 X!
0Y!
b100 X!
1Y!
#314
1&
1:!
#320
b1111 %
0&
19!
0:!
b0 X!
0Y!
b10010 X!
1Y!
#324
1&
1:!
b10010 V!
1l
0k
1i
#330
0&
0:!
#334
1&
1:!
#340
0&
0:!
#344
1&
1:!
#350
0&
0:!
#354
1&
1:!
#360
0&
0:!
#364
1&
1:!
#370
0&
0:!
#374
1&
1:!
#380
0&
0:!
#384
1&
1:!
#390
0&
0:!
#394
1&
1:!
#400
0&
0:!
#404
1&
1:!
#410
0&
0:!
#414
1&
1:!
#420
0&
0:!
#424
1&
1:!
